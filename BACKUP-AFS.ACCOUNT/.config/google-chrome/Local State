{
   "apps": {
      "app_launcher": {
         "should_show_apps_page": false
      }
   },
   "browser": {
      "last_redirect_origin": ""
   },
   "http_original_content_length": "30007386",
   "http_received_content_length": "30007386",
   "local_state": {
      "multiple_profile_prefs_version": 7
   },
   "ntp": {
      "promo_resource_cache_update": "1441733846.575014"
   },
   "plugins": {
      "metadata": {
         "adobe-flash-player": {
            "displayurl": true,
            "group_name_matcher": "*Shockwave Flash*",
            "help_url": "https://support.google.com/chrome/?p=plugin_flash",
            "lang": "en-US",
            "matching_mime_types": [ "application/futuresplash" ],
            "mime_types": [ "application/futuresplash", "application/x-shockwave-flash" ],
            "name": "Adobe Flash Player",
            "url": "http://get.adobe.com/flashplayer/",
            "versions": [ {
               "reference": "http://www.adobe.com/support/security/bulletins/apsb12-03.html",
               "status": "up_to_date",
               "version": "11.1.102"
            } ]
         },
         "google-chrome-pdf": {
            "group_name_matcher": "*Chrome PDF Viewer*",
            "name": "Chrome PDF Viewer",
            "versions": [ {
               "comment": "Google Chrome PDF has no version information.",
               "status": "up_to_date",
               "version": "0"
            } ]
         },
         "google-talk": {
            "group_name_matcher": "*Google Talk*",
            "name": "Google Talk",
            "versions": [ {
               "comment": "'Google Talk Plugin' and 'Google Talk Plugin Video Accelerator' use two completely different versioning schemes, so we can't define a minimum version.",
               "status": "up_to_date",
               "version": "0"
            } ]
         },
         "java-runtime-environment": {
            "displayurl": true,
            "group_name_matcher": "Java*",
            "help_url": "https://support.google.com/chrome/?p=plugin_java",
            "lang": "en-US",
            "mime_types": [ "application/x-java-applet", "application/x-java-applet,version=1.1", "application/x-java-applet,version=1.1.1", "application/x-java-applet,version=1.1.2", "application/x-java-applet,version=1.1.3", "application/x-java-applet,version=1.2", "application/x-java-applet,version=1.2.1", "application/x-java-applet,version=1.2.2", "application/x-java-applet,version=1.3", "application/x-java-applet,version=1.3.1", "application/x-java-applet,version=1.4", "application/x-java-applet,version=1.4.1", "application/x-java-applet,version=1.4.2", "application/x-java-applet,version=1.5", "application/x-java-applet,version=1.6", "application/x-java-applet,version=1.7", "application/x-java-bean", "application/x-java-bean,version=1.1", "application/x-java-bean,version=1.1.1", "application/x-java-bean,version=1.1.2", "application/x-java-bean,version=1.1.3", "application/x-java-bean,version=1.2", "application/x-java-bean,version=1.2.1", "application/x-java-bean,version=1.2.2", "application/x-java-bean,version=1.3", "application/x-java-bean,version=1.3.1", "application/x-java-bean,version=1.4", "application/x-java-bean,version=1.4.1", "application/x-java-bean,version=1.4.2", "application/x-java-bean,version=1.5", "application/x-java-bean,version=1.6", "application/x-java-bean,version=1.7", "application/x-java-vm" ],
            "name": "Java(TM)",
            "url": "http://java.com/download",
            "versions": [ {
               "status": "requires_authorization",
               "version": "1.6.0.39"
            }, {
               "status": "out_of_date",
               "version": "1.7"
            }, {
               "status": "requires_authorization",
               "version": "1.7.0.13"
            } ]
         },
         "lightspark": {
            "displayurl": true,
            "group_name_matcher": "*Shockwave Flash*",
            "lang": "en-US",
            "matching_mime_types": [ "application/x-lightspark" ],
            "mime_types": [ "application/x-lightspark" ],
            "name": "Lightspark",
            "url": "https://launchpad.net/lightspark",
            "versions": [ {
               "status": "requires_authorization",
               "version": "0"
            } ]
         }
      },
      "resource_cache_update": "1441733901.574849"
   },
   "policy": {
      "last_statistics_update": "13086207441564462"
   },
   "profile": {
      "info_cache": {
         "Default": {
            "avatar_icon": "chrome://theme/IDR_PROFILE_AVATAR_0",
            "background_apps": false,
            "is_managed": false,
            "name": "First user",
            "user_name": ""
         }
      },
      "last_used": "Default"
   },
   "show-first-run-bubble-option": 0,
   "shutdown": {
      "num_processes": 2,
      "num_processes_slow": 1,
      "type": 1
   },
   "uninstall_metrics": {
      "installation_date2": "1429813100",
      "launch_count": "2"
   },
   "user_experience_metrics": {
      "low_entropy_source": 1830,
      "session_id": 1,
      "stability": {
         "breakpad_registration_fail": 2,
         "breakpad_registration_ok": 0,
         "crash_count": 0,
         "debugger_not_present": 2,
         "debugger_present": 0,
         "exited_cleanly": true,
         "incomplete_session_end_count": 0,
         "last_timestamp_sec": "1441734093",
         "launch_count": 2,
         "launch_time_sec": "1441733841",
         "page_load_count": 0,
         "plugin_stats2": [ {
            "crashes": 0,
            "instances": 0,
            "launches": 1,
            "loading_errors": 0,
            "name": "Shockwave Flash"
         } ],
         "renderer_crash_count": 0,
         "renderer_hang_count": 0,
         "session_end_completed": true,
         "stats_buildtime": "1369779491",
         "stats_version": "27.0.1453.110-64"
      }
   },
   "variations_last_fetch_time": "13086207442914760",
   "variations_seed": "",
   "variations_seed_date": "13086207443000000",
   "was": {
      "restarted": false
   }
}
